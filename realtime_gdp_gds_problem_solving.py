# -*- coding: utf-8 -*-
"""Realtime_GDP_GDS_problem_solving.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QTK9ISrnKXW9SG5BiFLtmO1Xz0Zo9RH8
"""

import pandas as pd 
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np

"""## **Part1**

# **Country set 1**

## **Collect data set through Penn World Table 10.0at**
"""

df1=pd.read_excel("FebPwtExport4272022 (1).xlsx")

df1

"""## **a**)**Calculate real GDP per capita  from 1960 to 2019mand generated a column**"""

df1["GDP_Per_Capita"]=df1["RGDPE-Value"]/df1.Population

df1.head(480)

box=df1.Region.unique()

box=list(box)

box

"""## **b)Calcultating GDP per Capita accoding to every region by USA**

making list using loc function
"""

list1=df1.loc[df1["Region"]=='AUT'].GDP_Per_Capita.to_list()
list2=df1.loc[df1["Region"]=="USA"].GDP_Per_Capita.to_list()

result1 = [a / b for a, b in zip(list1, list2)]

df1.Region.unique()

list3=df1.loc[df1['Region']=='AUS'].GDP_Per_Capita.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result2=[a/b for a,b in zip(list3,list2)]

list4=df1.loc[df1['Region']=='DEU'].GDP_Per_Capita.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result3=[a/b for a,b in zip(list4,list2)]

list5=df1.loc[df1['Region']=='ESP'].GDP_Per_Capita.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result4=[a/b for a,b in zip(list5,list2)]

list6=df1.loc[df1['Region']=='JPN'].GDP_Per_Capita.to_list() #to_list() function return a list of the values.
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result5=[a/b for a,b in zip(list6,list2)]

list7=df1.loc[df1['Region']=='NLD'].GDP_Per_Capita.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result6=[a/b for a,b in zip(list7,list2)]#The zip() function will only iterate over the smallest list passed. If given lists of different lengths, the resulting combination will only be as long as the smallest list passed.

list8=df1.loc[df1['Region']=='SWE'].GDP_Per_Capita.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result7=[a/b for a,b in zip(list8,list2)]

list9=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result8=[a/b for a,b in zip(list9,list2)]

Result7

Result8

GDP_Per_Capita_USA=result1+Result2+Result3+Result4+Result5+Result6+Result7+Result8

GDP_Per_Capita_USA

df1['GDP_Per_Capita_per_USA']=GDP_Per_Capita_USA

len(GDP_Per_Capita_USA)

df1.loc[df1['Region']=='USA']

"""## **final Result of point b**"""

df1

"""##  **We plot graph of point b**"""

plt.figure(figsize=(40,50))
sns.barplot(y=df1.GDP_Per_Capita_per_USA, x=df1.YearCode, hue=df1.Region)
plt.show()

"""## **c)Calcuate annual growth rate per year**"""

box1=df1['GDP_Per_Capita']

List_for_gr=df1["GDP_Per_Capita"].to_list()

len(List_for_gr)

Gr_Year=[]
for x in range(479):
  y=x+1
  per_dif=((List_for_gr[y]-List_for_gr[x])/List_for_gr[x])*100
  x+=1
  Gr_Year.append(per_dif)

#Gr_Year

Gr_Year.insert(0,0)

len(Gr_Year)

df1.Region.unique()

df1["GDP_Growth_Yr"]=Gr_Year

df1.loc[df1['YearCode']==1960,'GDP_Growth_Yr']=0

df1.GDP_Growth_Yr

Ag_AUT=df1.loc[df1.Region=="AUT"].GDP_Growth_Yr.mean()
Ag_AUS=df1.loc[df1.Region=="AUS"].GDP_Growth_Yr.mean()
Ag_DEU=df1.loc[df1.Region=="DEU"].GDP_Growth_Yr.mean()
Ag_ESP=df1.loc[df1.Region=="ESP"].GDP_Growth_Yr.mean()
Ag_JPN=df1.loc[df1.Region=="JPN"].GDP_Growth_Yr.mean()
Ag_NLD=df1.loc[df1.Region=="NLD"].GDP_Growth_Yr.mean()
Ag_SWE=df1.loc[df1.Region=="SWE"].GDP_Growth_Yr.mean()
Ag_USA=df1.loc[df1.Region=="USA"].GDP_Growth_Yr.mean()

Ag_since_1960=[Ag_AUT,Ag_AUS,Ag_DEU,Ag_ESP,Ag_JPN,Ag_NLD,Ag_SWE,Ag_USA]

Ag_since_1960

GDP_pc_1960=df1.loc[df1.YearCode==1960].GDP_Per_Capita.to_list()

GDP_pc_1960

import pandas as pd
df_1960=pd.DataFrame()

Region=["AUT","AUS","DEU","ESP","JPN","NLD","SEW","USA"]

df_1960["Ag_since_1960"]=pd.Series(Ag_since_1960)

df_1960["Region"]=pd.Series(Region)

df_1960["GDP_pc_1960"]=pd.Series(GDP_pc_1960)

df_1960

"""## **final result of point c**"""

df1

"""## We produced scatter plot according to average growth rate per year"""

sns.scatterplot(data=df_1960,x="GDP_pc_1960", y="Ag_since_1960", hue="Region")
plt.show()

"""## **Country set 1 all columns added into table as you see**"""

df1

"""# **Country set2**

## **Part 1**

## **Collect data into Penn World Table 10.0at**
"""

df2=pd.read_excel("Feb (2).xlsx")

df2

df2.shape

df2.loc[df2["Region"]=="BDI"]

"""## **a**)**Calcluate** **GDP** **per** **Capita**"""

df2["GDP_Per_Capita_set2"]=df2["GDP"]/df2.Population

df2

"""## **b)We are Calculating for each country for each year the ratio of its real GDP per capita to that of the US for that year.**"""

df2.Region.unique()

list1=df2.loc[df2['Region']=='BDI'].GDP_Per_Capita_set2.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result1_set2=[c/b for c,b in zip(list1,list2)]

list3=df2.loc[df2['Region']=='BEN'].GDP_Per_Capita_set2.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result2_set2=[c/b for c,b in zip(list3,list2)]

list4=df2.loc[df2['Region']=='CAF'].GDP_Per_Capita_set2.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result3_set2=[c/b for c,b in zip(list4,list2)]

list5=df2.loc[df2['Region']=='COG'].GDP_Per_Capita_set2.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result4_set2=[c/b for c,b in zip (list5,list2)]

list6=df2.loc[df2['Region']=='MOZ'].GDP_Per_Capita_set2.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result5_set2=[c/b for c,b in zip (list6,list2)]

list7=df2.loc[df2['Region']=='RWA'].GDP_Per_Capita_set2.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result6_set2=[c/b for c,b in zip (list7,list2)]

list8=df2.loc[df2['Region']=='UGA'].GDP_Per_Capita_set2.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result7_set2=[c/b for c,b in zip (list8,list2)]

list9=df2.loc[df2['Region']=='ZWE'].GDP_Per_Capita_set2.to_list()
list2=df1.loc[df1['Region']=='USA'].GDP_Per_Capita.to_list()

Result8_set2=[c/b for c,b in zip(list9,list2)]

GDP_Per_Capita_USA_s2=Result1_set2+Result2_set2+Result3_set2+Result4_set2+Result5_set2+Result6_set2+Result7_set2+Result8_set2

df2['GDP_Per_Capita_per_USA_s2']=GDP_Per_Capita_USA_s2

df2.head()

len(GDP_Per_Capita_USA_s2)

"""## **plot graph according to point b**"""

plt.figure(figsize=(40,80))
sns.barplot(y=df2.GDP_Per_Capita_per_USA_s2, x=df2.YearCode, hue=df2.Region)
plt.show()

"""## **c)Calcuate average annual growth rate of countrty set 2**"""

box2=df2['GDP_Per_Capita_set2']

List_for_gr_set2=df2["GDP_Per_Capita_set2"].to_list()

box2=df2.GDP_Per_Capita_set2

Gr_Year=[]
for x in range(479):
  y=x+1
  per_dif_set2=((List_for_gr_set2[y]-List_for_gr_set2[x])/List_for_gr_set2[x])*100

  Gr_Year.append(per_dif_set2)

Gr_Year.insert(0,0)

df2["GDP_Growth_Yr_set2"]=Gr_Year #add list into column form

df2.loc[df2["YearCode"]==1960,"GDP_Growth_Yr_set2"]=0 #assgin the value 0 in every country but year only 1960

df2

df2.Region.unique()

Ag_BDI=df2.loc[df2.Region=='BDI'].GDP_Growth_Yr_set2.mean() #cal mean for every country seperatley
Ag_BEN=df2.loc[df2.Region=='BEN'].GDP_Growth_Yr_set2.mean()
Ag_CAF=df2.loc[df2.Region=='CAF'].GDP_Growth_Yr_set2.mean()
Ag_COG=df2.loc[df2.Region=='COG'].GDP_Growth_Yr_set2.mean()
Ag_MOZ=df2.loc[df2.Region=='MOZ'].GDP_Growth_Yr_set2.mean()
Ag_RWA=df2.loc[df2.Region=='RWA'].GDP_Growth_Yr_set2.mean()
Ag_UGA=df2.loc[df2.Region=='UGA'].GDP_Growth_Yr_set2.mean()
Ag_ZWE=df2.loc[df2.Region=='ZWE'].GDP_Growth_Yr_set2.mean()

Ag_since_1960_set2=[Ag_BDI,Ag_BEN,Ag_CAF,Ag_COG,Ag_MOZ,Ag_RWA,Ag_UGA,Ag_ZWE]

Ag_since_1960_set2

GDP_pc_1960_set2=df2.loc[df2.YearCode==1960].GDP_Per_Capita_set2.to_list()

GDP_pc_1960_set2

df_1960_set2=pd.DataFrame() #make data frame and creating new table

df2.Region.unique()

Region=['BDI', 'BEN', 'CAF', 'COG', 'MOZ', 'RWA', 'UGA', 'ZWE']

df_1960_set2['Ag_since_1960_set2']=pd.Series(Ag_since_1960_set2) #create column 1

df_1960_set2['Region']=pd.Series(Region)

df_1960_set2['GDP_pc_1960_set2']=pd.Series(GDP_pc_1960_set2)

df_1960_set2

"""## **plot a scatter according to point c**"""

sns.scatterplot(data=df_1960_set2,x='GDP_pc_1960_set2',y='Ag_since_1960_set2',hue='Region')
plt.show()

"""# **Part2**

## **Country set 1**

## Collecting a data through World bank database
"""

df3=pd.read_excel('Data.xlsx')

df3.shape

"""## **a)Average gross domestic savings from 1970 to 2019**"""

df3.head()

column=df3[['Year','Australia','Austria','Germany','Spain','Japan','Netherlands','Sweden','United States']]

column.Year

column=column.loc[column.Year>=1970]

column=column.drop("Year", axis=1)

column.isnull().sum()

AGDS_set1=list(column.dropna().mean())

AGDS_set1

column2=df3[['Year','Burundi','Benin','Central African Republic','Mozambique','Rwanda','Uganda','Zimbabwe']]

column2=column2.loc[column2.Year>=1970]

column2=column2.drop('Year',axis=1)

AGDS_set2=list(column2.dropna().mean())

AGDS_set2

df3_results=pd.DataFrame()

Country_set1_Region=['Australia','Austria','Germany','Spain','Japan','Netherlands','Sweden','United States']

AGDS_set1

Country_set2_Region=['Burundi','Benin','Central African Republic','Mozambique','Rwanda','Uganda','Zimbabwe']

AGDS_set2

df3_results["Country_set1_Region"]=pd.Series(Country_set1_Region)

df3_results["AGDS_set1"]=pd.Series(list)

df3_results["AGDS_set1"]=pd.Series(AGDS_set1)

df3_results["Country_set2_Region"]=pd.Series(Country_set2_Region)

df3_results["AGDS_set2"]=pd.Series(list)#if list lenth not equql to index length then use this mehod

df3_results["AGDS_set2"]=pd.Series(AGDS_set2)

"""## **Final Result of point a**"""

df3_results

